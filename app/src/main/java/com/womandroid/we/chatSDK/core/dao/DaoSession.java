package com.womandroid.we.chatSDK.core.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.womandroid.we.chatSDK.core.dao.ContactLink;
import com.womandroid.we.chatSDK.core.dao.FollowerLink;
import com.womandroid.we.chatSDK.core.dao.LinkedAccount;
import com.womandroid.we.chatSDK.core.dao.Message;
import com.womandroid.we.chatSDK.core.dao.MessageMetaValue;
import com.womandroid.we.chatSDK.core.dao.ReadReceiptUserLink;
import com.womandroid.we.chatSDK.core.dao.Thread;
import com.womandroid.we.chatSDK.core.dao.ThreadMetaValue;
import com.womandroid.we.chatSDK.core.dao.User;
import com.womandroid.we.chatSDK.core.dao.UserMetaValue;
import com.womandroid.we.chatSDK.core.dao.UserThreadLink;

import com.womandroid.we.chatSDK.core.dao.ContactLinkDao;
import com.womandroid.we.chatSDK.core.dao.FollowerLinkDao;
import com.womandroid.we.chatSDK.core.dao.LinkedAccountDao;
import com.womandroid.we.chatSDK.core.dao.MessageDao;
import com.womandroid.we.chatSDK.core.dao.MessageMetaValueDao;
import com.womandroid.we.chatSDK.core.dao.ReadReceiptUserLinkDao;
import com.womandroid.we.chatSDK.core.dao.ThreadDao;
import com.womandroid.we.chatSDK.core.dao.ThreadMetaValueDao;
import com.womandroid.we.chatSDK.core.dao.UserDao;
import com.womandroid.we.chatSDK.core.dao.UserMetaValueDao;
import com.womandroid.we.chatSDK.core.dao.UserThreadLinkDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig contactLinkDaoConfig;
    private final DaoConfig followerLinkDaoConfig;
    private final DaoConfig linkedAccountDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig messageMetaValueDaoConfig;
    private final DaoConfig readReceiptUserLinkDaoConfig;
    private final DaoConfig threadDaoConfig;
    private final DaoConfig threadMetaValueDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userMetaValueDaoConfig;
    private final DaoConfig userThreadLinkDaoConfig;

    private final ContactLinkDao contactLinkDao;
    private final FollowerLinkDao followerLinkDao;
    private final LinkedAccountDao linkedAccountDao;
    private final MessageDao messageDao;
    private final MessageMetaValueDao messageMetaValueDao;
    private final ReadReceiptUserLinkDao readReceiptUserLinkDao;
    private final ThreadDao threadDao;
    private final ThreadMetaValueDao threadMetaValueDao;
    private final UserDao userDao;
    private final UserMetaValueDao userMetaValueDao;
    private final UserThreadLinkDao userThreadLinkDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        contactLinkDaoConfig = daoConfigMap.get(ContactLinkDao.class).clone();
        contactLinkDaoConfig.initIdentityScope(type);

        followerLinkDaoConfig = daoConfigMap.get(FollowerLinkDao.class).clone();
        followerLinkDaoConfig.initIdentityScope(type);

        linkedAccountDaoConfig = daoConfigMap.get(LinkedAccountDao.class).clone();
        linkedAccountDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        messageMetaValueDaoConfig = daoConfigMap.get(MessageMetaValueDao.class).clone();
        messageMetaValueDaoConfig.initIdentityScope(type);

        readReceiptUserLinkDaoConfig = daoConfigMap.get(ReadReceiptUserLinkDao.class).clone();
        readReceiptUserLinkDaoConfig.initIdentityScope(type);

        threadDaoConfig = daoConfigMap.get(ThreadDao.class).clone();
        threadDaoConfig.initIdentityScope(type);

        threadMetaValueDaoConfig = daoConfigMap.get(ThreadMetaValueDao.class).clone();
        threadMetaValueDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userMetaValueDaoConfig = daoConfigMap.get(UserMetaValueDao.class).clone();
        userMetaValueDaoConfig.initIdentityScope(type);

        userThreadLinkDaoConfig = daoConfigMap.get(UserThreadLinkDao.class).clone();
        userThreadLinkDaoConfig.initIdentityScope(type);

        contactLinkDao = new ContactLinkDao(contactLinkDaoConfig, this);
        followerLinkDao = new FollowerLinkDao(followerLinkDaoConfig, this);
        linkedAccountDao = new LinkedAccountDao(linkedAccountDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        messageMetaValueDao = new MessageMetaValueDao(messageMetaValueDaoConfig, this);
        readReceiptUserLinkDao = new ReadReceiptUserLinkDao(readReceiptUserLinkDaoConfig, this);
        threadDao = new ThreadDao(threadDaoConfig, this);
        threadMetaValueDao = new ThreadMetaValueDao(threadMetaValueDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userMetaValueDao = new UserMetaValueDao(userMetaValueDaoConfig, this);
        userThreadLinkDao = new UserThreadLinkDao(userThreadLinkDaoConfig, this);

        registerDao(ContactLink.class, contactLinkDao);
        registerDao(FollowerLink.class, followerLinkDao);
        registerDao(LinkedAccount.class, linkedAccountDao);
        registerDao(Message.class, messageDao);
        registerDao(MessageMetaValue.class, messageMetaValueDao);
        registerDao(ReadReceiptUserLink.class, readReceiptUserLinkDao);
        registerDao(Thread.class, threadDao);
        registerDao(ThreadMetaValue.class, threadMetaValueDao);
        registerDao(User.class, userDao);
        registerDao(UserMetaValue.class, userMetaValueDao);
        registerDao(UserThreadLink.class, userThreadLinkDao);
    }
    
    public void clear() {
        contactLinkDaoConfig.clearIdentityScope();
        followerLinkDaoConfig.clearIdentityScope();
        linkedAccountDaoConfig.clearIdentityScope();
        messageDaoConfig.clearIdentityScope();
        messageMetaValueDaoConfig.clearIdentityScope();
        readReceiptUserLinkDaoConfig.clearIdentityScope();
        threadDaoConfig.clearIdentityScope();
        threadMetaValueDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userMetaValueDaoConfig.clearIdentityScope();
        userThreadLinkDaoConfig.clearIdentityScope();
    }

    public ContactLinkDao getContactLinkDao() {
        return contactLinkDao;
    }

    public FollowerLinkDao getFollowerLinkDao() {
        return followerLinkDao;
    }

    public LinkedAccountDao getLinkedAccountDao() {
        return linkedAccountDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public MessageMetaValueDao getMessageMetaValueDao() {
        return messageMetaValueDao;
    }

    public ReadReceiptUserLinkDao getReadReceiptUserLinkDao() {
        return readReceiptUserLinkDao;
    }

    public ThreadDao getThreadDao() {
        return threadDao;
    }

    public ThreadMetaValueDao getThreadMetaValueDao() {
        return threadMetaValueDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserMetaValueDao getUserMetaValueDao() {
        return userMetaValueDao;
    }

    public UserThreadLinkDao getUserThreadLinkDao() {
        return userThreadLinkDao;
    }

}
